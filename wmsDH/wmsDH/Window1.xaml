<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wmsDH"
         xmlns:Controls="clr-namespace:Controls;assembly=Controls" x:Class="wmsDH.Window1"
        mc:Ignorable="d"
        Title="Window1" Height="346.39" Width="800">
    <Window.Resources>

        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
        
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
        <Style x:Key="MenuStyle1" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true"  >
                            <Controls:MetroScrollViewer  HorizontalAlignment="Left"   VerticalAlignment="Stretch"  >
                                <!--<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                                <StackPanel IsItemsHost="True" ScrollViewer.CanContentScroll="True"></StackPanel>
                            </Controls:MetroScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style> 
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121"/>
        <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999"/>

        <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

        <Style x:Key="MenuScrollViewer"
       TargetType="{x:Type ScrollViewer}"
       BasedOn="{x:Null}">
            <Setter Property="HorizontalScrollBarVisibility"
          Value="Hidden" />
            <Setter Property="VerticalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="1"
                  Grid.Column="0">
                                <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                            </Border>
                            <RepeatButton 
                        Grid.Row="0"
                        Grid.Column="0"
                        Command="{x:Static ScrollBar.LineUpCommand}"
                        CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False">
                                <RepeatButton.Visibility>
                                    <MultiBinding FallbackValue="Visibility.Collapsed"
                            Converter="{StaticResource MenuScrollingVisibilityConverter}"
                            ConverterParameter="0">
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ComputedVerticalScrollBarVisibility" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="VerticalOffset" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ExtentHeight" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ViewportHeight" />
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                  Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                            </RepeatButton>
                            <RepeatButton 
                        Grid.Row="2"
                        Grid.Column="0"
                        Command="{x:Static ScrollBar.LineDownCommand}"
                        CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False">
                                <RepeatButton.Visibility>
                                    <MultiBinding FallbackValue="Visibility.Collapsed"
                            Converter="{StaticResource MenuScrollingVisibilityConverter}"
                            ConverterParameter="100">
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ComputedVerticalScrollBarVisibility" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="VerticalOffset" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ExtentHeight" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ViewportHeight" />
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                  Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- TopLevelHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
            <Border x:Name="Border">
                <Grid>
                    <ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    <Popup x:Name="Popup" 
             Placement="Right"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade"
                 PlacementTarget="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Menu}} }"    >
                        <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                BorderThickness="1"
                Background="{DynamicResource MenuPopupBrush}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}">
                                <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation"
             Value="true">
                    <Setter TargetName="Popup"
              Property="PopupAnimation"
              Value="None" />
                </Trigger>
                <Trigger Property="IsHighlighted"
             Value="true">
                    <Setter TargetName="Border"
              Property="BorderBrush"
              Value="Transparent" />
                    <Setter Property="Background"
              TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{StaticResource ControlLightColor}"  Offset="0.5"  />
                                        <GradientStop Color="{StaticResource ControlMouseOverColor}"  Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                    <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="0,0,4,4" />
                    <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,0,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled"
             Value="False">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuItem -->
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
            <Border x:Name="Border"
          BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                    <Border x:Name="Check"
              Width="13"
              Height="13"
              Visibility="Collapsed"
              Margin="6,0,6,0"
              BorderThickness="1">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource BorderLightColor}"
                              Offset="0.0" />
                                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                              Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ControlLightColor}" />
                                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                              Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Path x:Name="CheckMark"
              Width="7"
              Height="7"
              Visibility="Hidden"
              SnapsToDevicePixels="False"
              StrokeThickness="2"
              Data="M 0 0 L 7 7 M 0 7 L 7 0">
                            <Path.Stroke>
                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                            </Path.Stroke>
                        </Path>
                    </Border>
                    <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="5,2,0,2"
                 DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="ButtonBase.Command"
             Value="{x:Null}" />
                <Trigger Property="Icon"
             Value="{x:Null}">
                    <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
                </Trigger>
                <Trigger Property="IsChecked"
             Value="true">
                    <Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="IsCheckable"
             Value="true">
                    <Setter TargetName="Check"
              Property="Visibility"
              Value="Visible" />
                    <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
                </Trigger>
                <Trigger Property="IsHighlighted"
             Value="true">
                    <Setter Property="Background"
              TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                                <GradientStop Color="Transparent"
                          Offset="0" />
                                <GradientStop Color="{DynamicResource ControlMouseOverColor}"
                          Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush"
              TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource BorderMediumColor}"
                          Offset="0" />
                                <GradientStop Color="Transparent"
                          Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled"
             Value="false">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions> 
        
        <Controls:MetroScrollViewer HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Width="100">
            <Rectangle Fill="Azure" Width="500"></Rectangle>
        </Controls:MetroScrollViewer>
        <DockPanel Grid.Column="1" Background="Beige" Width="200" >
            <Menu Style="{DynamicResource MenuStyle1}"  >
                <MenuItem Header="wuruo"  >
                    <MenuItem Header="zoua"  >
                        <MenuItem Header="lengma"/>
                    </MenuItem>
                    <MenuItem Header="zoua"/>
                    <MenuItem Header="zoua"/>
                    <MenuItem Header="zoua"/>
                    <MenuItem Header="zoua"/>
                </MenuItem>
                <MenuItem Header="wuruosdfsdf" >
                    <MenuItem Header="zoua"  >
                        <MenuItem Header="lengma"/>
                    </MenuItem>
                    <MenuItem Header="w"/>
                    <MenuItem Header="f"/>
                    <MenuItem Header="df"/>
                    <MenuItem Header="zoua"/>
                </MenuItem>
                <MenuItem Header="wuruo"/>
                <MenuItem Header="wuruo"/>
                <MenuItem Header="wuruo"/>
                <MenuItem Header="wuruo"/>

            </Menu>
        </DockPanel>
        <ContentControl Grid.Column="2" Background="Red" Height="200">
            <ContentControl.Template>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid>
                        <!--Keep the Ellipse a circle when ContentControl.Width
                    is set.-->
                        <Ellipse Width="{TemplateBinding Width}"
                         Height="{TemplateBinding Width}"
                         Fill="{TemplateBinding Background}"/>
                        <ContentPresenter VerticalAlignment="Center"
                                    HorizontalAlignment="Center"/>
                        <Popup x:Name="Popup" 
                                 Placement="Bottom"
                              IsOpen="False"
                                 AllowsTransparency="True"
                                 Focusable="False"
                                 PopupAnimation="Fade"
                               Opened="Popup_Opened"
                               >
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Name="mybegin">
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
                                        <DiscreteBooleanKeyFrame Value="True"  KeyTime="0:0:0.1"/>
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <StopStoryboard BeginStoryboardName="mybegin"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ContentControl.Template>
        </ContentControl>
    </Grid>
</Window>
